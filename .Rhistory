enrich<-c()
enrich<-subset(table, as.numeric(table$Abundance.Ratio.Adj..P.Value...Azacytidine..WT..test..Sample.....Untreated..WT..test..Sample.)<0.05)
#enrich$Abundance.Ratio...Test..Untreated..WT.....Test..Untreated..p53KD.<-as.numeric(enrich$Abundance.Ratio...Test..Untreated..WT.....Test..Untreated..p53KD.)
enrich_up<-subset(enrich, as.numeric(Abundance.Ratio...Azacytidine..WT..test..Sample.....Untreated..WT..test..Sample.)>2)
enrich_down<-subset(enrich, as.numeric(Abundance.Ratio...Azacytidine..WT..test..Sample.....Untreated..WT..test..Sample.)<0.5)
enrich$Abundance.Ratio...Azacytidine..WT..test..Sample.....Untreated..WT..test..Sample.<-as.numeric(enrich$Abundance.Ratio...Azacytidine..WT..test..Sample.....Untreated..WT..test..Sample.)
IDs$aza_WT_up<-enrich_up$Accession
IDs$aza_WT_down<-enrich_down$Accession
enrich<-c()
enrich<-subset(table, as.numeric(table$Abundance.Ratio.Adj..P.Value...Decitabine..WT..test..Sample.....Untreated..WT..test..Sample.)<0.05)
#enrich$Abundance.Ratio...Test..Untreated..WT.....Test..Untreated..p53KD.<-as.numeric(enrich$Abundance.Ratio...Test..Untreated..WT.....Test..Untreated..p53KD.)
enrich_up<-subset(enrich, as.numeric(Abundance.Ratio...Decitabine..WT..test..Sample.....Untreated..WT..test..Sample.)>2)
enrich_down<-subset(enrich, as.numeric(Abundance.Ratio...Decitabine..WT..test..Sample.....Untreated..WT..test..Sample.)<0.5)
enrich$Abundance.Ratio...Decitabine..WT..test..Sample.....Untreated..WT..test..Sample.<-as.numeric(enrich$Abundance.Ratio...Decitabine..WT..test..Sample.....Untreated..WT..test..Sample.)
IDs$dec_WT_up<-enrich_up$Accession
IDs$dec_WT_down<-enrich_down$Accession
write.csv(enrich_up,"Up_AZA_WT_0.05padj_2aratio.csv")
write.csv(enrich_down,"Down_AZA_WT_0.05padj_2aratio.csv")
#New processing
table<-read.csv("061221_EH_Rloop_TCA_p53KDcellLine.csv")
table<-table[!is.na(table$Checked),]
#plot(log2(as.numeric(table$Abundance.Ratio...Azacytidine..p53KD..test..Sample.....Untreated..p53KD..test..Sample.)), -log10(as.numeric(table$Abundance.Ratio.Adj..P.Value...Azacytidine..p53KD..test..Sample.....Untreated..p53KD..test..Sample.)))
enrich<-c()
enrich<-subset(table, as.numeric(table$Abundance.Ratio.Adj..P.Value...Azacytidine..p53KD..test..Sample.....Untreated..p53KD..test..Sample.)<0.05)
enrich$Abundance.Ratio...Azacytidine..p53KD..test..Sample.....Untreated..p53KD..test..Sample.<-as.numeric(enrich$Abundance.Ratio...Azacytidine..p53KD..test..Sample.....Untreated..p53KD..test..Sample.)
enrich_up<-subset(enrich, as.numeric(enrich$Abundance.Ratio...Azacytidine..p53KD..test..Sample.....Untreated..p53KD..test..Sample.)>2)
enrich_down<-subset(enrich, as.numeric(enrich$Abundance.Ratio...Azacytidine..p53KD..test..Sample.....Untreated..p53KD..test..Sample.)<0.5)
enrich$Abundance.Ratio...Azacytidine..p53KD..test..Sample.....Untreated..p53KD..test..Sample.<-as.numeric(enrich$Abundance.Ratio...Azacytidine..p53KD..test..Sample.....Untreated..p53KD..test..Sample.)
IDs$aza_p53_up<-enrich_up$Accession
IDs$aza_p53_down<-enrich_down$Accession
enrich<-c()
enrich<-subset(table, as.numeric(table$Abundance.Ratio.Adj..P.Value...Decitabine..p53KD..test..Sample.....Untreated..p53KD..test..Sample.)<0.05)
enrich$Abundance.Ratio...Decitabine..p53KD..test..Sample.....Untreated..p53KD..test..Sample.<-as.numeric(enrich$Abundance.Ratio...Decitabine..p53KD..test..Sample.....Untreated..p53KD..test..Sample.)
enrich_up<-subset(enrich, as.numeric(enrich$Abundance.Ratio...Decitabine..p53KD..test..Sample.....Untreated..p53KD..test..Sample.)>2)
enrich_down<-subset(enrich, as.numeric(enrich$Abundance.Ratio...Decitabine..p53KD..test..Sample.....Untreated..p53KD..test..Sample.)<0.5)
enrich$Abundance.Ratio...Decitabine..p53KD..test..Sample.....Untreated..p53KD..test..Sample.<-as.numeric(enrich$Abundance.Ratio...Decitabine..p53KD..test..Sample.....Untreated..p53KD..test..Sample.)
IDs$dec_p53_up<-enrich_up$Accession
IDs$dec_p53_down<-enrich_down$Accession
#New processing
table<-read.csv("061221_EH_Rloop_TCA_WTcellLine-(1).csv")
table<-table[!is.na(table$Checked),]
#plot(log2(as.numeric(table$Abundance.Ratio...Azacytidine..WT..test..Sample.....Untreated..WT..test..Sample.)), -log10(as.numeric(table$Abundance.Ratio.Adj..P.Value...Azacytidine..WT..test..Sample.....Untreated..WT..test..Sample.)))
#points(log2(as.numeric(table$Abundance.Ratio...Azacytidine..WT..test..Sample.....Untreated..WT..test..Sample.[2])), -log10(as.numeric(table$Abundance.Ratio.Adj..P.Value...Azacytidine..WT..test..Sample.....Untreated..WT..test..Sample.[2])),col="red")
IDs<-c()
enrich<-c()
enrich<-subset(table, as.numeric(table$Abundance.Ratio.Adj..P.Value...Azacytidine..WT..test..Sample.....Untreated..WT..test..Sample.)<0.05)
#enrich$Abundance.Ratio...Test..Untreated..WT.....Test..Untreated..p53KD.<-as.numeric(enrich$Abundance.Ratio...Test..Untreated..WT.....Test..Untreated..p53KD.)
enrich_up<-subset(enrich, as.numeric(Abundance.Ratio...Azacytidine..WT..test..Sample.....Untreated..WT..test..Sample.)>2)
enrich_down<-subset(enrich, as.numeric(Abundance.Ratio...Azacytidine..WT..test..Sample.....Untreated..WT..test..Sample.)<0.5)
enrich$Abundance.Ratio...Azacytidine..WT..test..Sample.....Untreated..WT..test..Sample.<-as.numeric(enrich$Abundance.Ratio...Azacytidine..WT..test..Sample.....Untreated..WT..test..Sample.)
IDs$aza_WT_up<-enrich_up$Accession
IDs$aza_WT_down<-enrich_down$Accession
write.csv(enrich_down,"Down_AZA_WT_0.05padj_2aratio.csv")
write.csv(enrich_up,"Up_AZA_WT_0.05padj_2aratio.csv")
enrich<-c()
enrich<-subset(table, as.numeric(table$Abundance.Ratio.Adj..P.Value...Decitabine..WT..test..Sample.....Untreated..WT..test..Sample.)<0.05)
#enrich$Abundance.Ratio...Test..Untreated..WT.....Test..Untreated..p53KD.<-as.numeric(enrich$Abundance.Ratio...Test..Untreated..WT.....Test..Untreated..p53KD.)
enrich_up<-subset(enrich, as.numeric(Abundance.Ratio...Decitabine..WT..test..Sample.....Untreated..WT..test..Sample.)>2)
enrich_down<-subset(enrich, as.numeric(Abundance.Ratio...Decitabine..WT..test..Sample.....Untreated..WT..test..Sample.)<0.5)
enrich$Abundance.Ratio...Decitabine..WT..test..Sample.....Untreated..WT..test..Sample.<-as.numeric(enrich$Abundance.Ratio...Decitabine..WT..test..Sample.....Untreated..WT..test..Sample.)
IDs$dec_WT_up<-enrich_up$Accession
IDs$dec_WT_down<-enrich_down$Accession
write.csv(enrich_up,"Up_DEC_WT_0.05padj_2aratio.csv")
write.csv(enrich_down,"Down_DEC_WT_0.05padj_2aratio.csv")
#New processing
table<-read.csv("061221_EH_Rloop_TCA_p53KDcellLine.csv")
table<-table[!is.na(table$Checked),]
#plot(log2(as.numeric(table$Abundance.Ratio...Azacytidine..p53KD..test..Sample.....Untreated..p53KD..test..Sample.)), -log10(as.numeric(table$Abundance.Ratio.Adj..P.Value...Azacytidine..p53KD..test..Sample.....Untreated..p53KD..test..Sample.)))
enrich<-c()
enrich<-subset(table, as.numeric(table$Abundance.Ratio.Adj..P.Value...Azacytidine..p53KD..test..Sample.....Untreated..p53KD..test..Sample.)<0.05)
enrich$Abundance.Ratio...Azacytidine..p53KD..test..Sample.....Untreated..p53KD..test..Sample.<-as.numeric(enrich$Abundance.Ratio...Azacytidine..p53KD..test..Sample.....Untreated..p53KD..test..Sample.)
enrich_up<-subset(enrich, as.numeric(enrich$Abundance.Ratio...Azacytidine..p53KD..test..Sample.....Untreated..p53KD..test..Sample.)>2)
enrich_down<-subset(enrich, as.numeric(enrich$Abundance.Ratio...Azacytidine..p53KD..test..Sample.....Untreated..p53KD..test..Sample.)<0.5)
enrich$Abundance.Ratio...Azacytidine..p53KD..test..Sample.....Untreated..p53KD..test..Sample.<-as.numeric(enrich$Abundance.Ratio...Azacytidine..p53KD..test..Sample.....Untreated..p53KD..test..Sample.)
IDs$aza_p53_up<-enrich_up$Accession
IDs$aza_p53_down<-enrich_down$Accession
write.csv(enrich_down,"Down_AZA_p53_0.05padj_2aratio.csv")
write.csv(enrich_up,"Up_AZA_p53_0.05padj_2aratio.csv")
enrich<-c()
enrich<-subset(table, as.numeric(table$Abundance.Ratio.Adj..P.Value...Decitabine..p53KD..test..Sample.....Untreated..p53KD..test..Sample.)<0.05)
enrich$Abundance.Ratio...Decitabine..p53KD..test..Sample.....Untreated..p53KD..test..Sample.<-as.numeric(enrich$Abundance.Ratio...Decitabine..p53KD..test..Sample.....Untreated..p53KD..test..Sample.)
enrich_up<-subset(enrich, as.numeric(enrich$Abundance.Ratio...Decitabine..p53KD..test..Sample.....Untreated..p53KD..test..Sample.)>2)
enrich_down<-subset(enrich, as.numeric(enrich$Abundance.Ratio...Decitabine..p53KD..test..Sample.....Untreated..p53KD..test..Sample.)<0.5)
enrich$Abundance.Ratio...Decitabine..p53KD..test..Sample.....Untreated..p53KD..test..Sample.<-as.numeric(enrich$Abundance.Ratio...Decitabine..p53KD..test..Sample.....Untreated..p53KD..test..Sample.)
IDs$dec_p53_up<-enrich_up$Accession
IDs$dec_p53_down<-enrich_down$Accession
write.csv(enrich_down,"Down_DEC_p53_0.05padj_2aratio.csv")
write.csv(enrich_up,"Up_DEC_p53_0.05padj_2aratio.csv")
Enrichment.KEGG(IDs$aza_WT_up,OS="hsapiens",p_value=0.05)
Enrichment.KEGG(IDs$dec_WT_up,OS="hsapiens",p_value=0.05)
Enrichment.KEGG(IDs$aza_WT_down,OS="hsapiens",p_value=0.05)
Enrichment.KEGG(IDs$dec_WT_down,OS="hsapiens",p_value=0.05)
Enrichment.KEGG(IDs$aza_p53_up,OS="hsapiens",p_value=0.05)
Enrichment.KEGG(IDs$dec_p53_up,OS="hsapiens",p_value=0.05)
Enrichment.KEGG(IDs$aza_p53_down,OS="hsapiens",p_value=0.05)
Enrichment.KEGG(IDs$dec_p53_down,OS="hsapiens",p_value=0.05)
Enrichment.KEGG(IDs$aza_WT_up,OS="hsapiens",p_value=0.05)
Enrichment.KEGG(IDs$dec_WT_up,OS="hsapiens",p_value=0.05)
Enrichment.KEGG(IDs$aza_WT_down,OS="hsapiens",p_value=0.05)
Enrichment.KEGG(IDs$dec_WT_down,OS="hsapiens",p_value=0.05)
Enrichment.KEGG(IDs$aza_p53_up,OS="hsapiens",p_value=0.05)
Enrichment.KEGG(IDs$dec_p53_up,OS="hsapiens",p_value=0.05)
Enrichment.KEGG(IDs$aza_p53_down,OS="hsapiens",p_value=0.05)
Enrichment.KEGG(IDs$dec_p53_down,OS="hsapiens",p_value=0.05)
vennplot(IDs[c(1,3,5,7)])
vennplot(IDs[c(2,4,6,8)])
venn.diagram(list(IDs$aza_p53_down,IDs$aza_WT_up),  category.names = c("Set 1" , "Set 2 "))
vennplot(IDs[1,7])
vennplot(IDs[c(1,7)])
vennplot(IDs[c(1,8)])
vennplot(IDs[c(1,6)])
# use Homer
#annotatePeaks.pl WT_aza_minus.bed hg19 > WT_aza_minus_homer.txt -genomeOntology ./GO_WT_aza_minus
#for up/down-regulatd peaks
homer_path <- list.files("../homer", pattern="*.bedannStats.txt", full.names=TRUE)
homer_path<-sort(homer_path,decreasing = T)
names<-sort(names(files),decreasing = T)
new_table<-c()
for (i in homer_path){
table<-read.delim(i)
new_table$Satellite<-append(new_table$Satellite,as.numeric(table[table$Annotation=="Satellite",]$Log2.Ratio..obs.exp.))
new_table$LINE<-append(new_table$LINE,as.numeric(table[table$Annotation=="LINE",]$Log2.Ratio..obs.exp.))
new_table$SINE<-append(new_table$SINE,as.numeric(table[table$Annotation=="SINE",]$Log2.Ratio..obs.exp.))
#new_table$rRNA<-append(new_table$rRNA,as.numeric(table[table$Annotation=="rRNA",]$Log2.Ratio..obs.exp.))
new_table$tRNA<-append(new_table$tRNA,as.numeric(table[table$Annotation=="tRNA",]$Log2.Ratio..obs.exp.))
new_table$LTR<-append(new_table$LTR,as.numeric(table[table$Annotation=="LTR",]$Log2.Ratio..obs.exp.))
new_table$Low_complexity<-append(new_table$Low_complexity,as.numeric(table[table$Annotation=="Low_complexity",]$Log2.Ratio..obs.exp.))
new_table$Simple_repeat<-append(new_table$Simple_repeat,as.numeric(table[table$Annotation=="Simple_repeat",]$Log2.Ratio..obs.exp.))
}
new_df<-as.data.frame(new_table)
row.names(new_df)<-names
par(mfrow=c(4,2))
names
names<-sort(c(paste0(names(peaks_Up_in_state_1),"_up"),paste0(names(peaks_Down_in_state_1),"_down")),decreasing = T)
new_table<-c()
for (i in homer_path){
table<-read.delim(i)
new_table$Satellite<-append(new_table$Satellite,as.numeric(table[table$Annotation=="Satellite",]$Log2.Ratio..obs.exp.))
new_table$LINE<-append(new_table$LINE,as.numeric(table[table$Annotation=="LINE",]$Log2.Ratio..obs.exp.))
new_table$SINE<-append(new_table$SINE,as.numeric(table[table$Annotation=="SINE",]$Log2.Ratio..obs.exp.))
#new_table$rRNA<-append(new_table$rRNA,as.numeric(table[table$Annotation=="rRNA",]$Log2.Ratio..obs.exp.))
new_table$tRNA<-append(new_table$tRNA,as.numeric(table[table$Annotation=="tRNA",]$Log2.Ratio..obs.exp.))
new_table$LTR<-append(new_table$LTR,as.numeric(table[table$Annotation=="LTR",]$Log2.Ratio..obs.exp.))
new_table$Low_complexity<-append(new_table$Low_complexity,as.numeric(table[table$Annotation=="Low_complexity",]$Log2.Ratio..obs.exp.))
new_table$Simple_repeat<-append(new_table$Simple_repeat,as.numeric(table[table$Annotation=="Simple_repeat",]$Log2.Ratio..obs.exp.))
}
new_df<-as.data.frame(new_table)
row.names(new_df)<-names
names
new_df
new_df<-as.data.frame(new_table)
new_df
setwd("/Volumes/Transcend/p53/DRIPc_AZA")
#for sample peaks of all
homer_path <- list.files("../homer", pattern="*all.bedannStats.txt", full.names=TRUE)
homer_path<-sort(homer_path,decreasing = T)
new_table<-c()
for (i in homer_path){
table<-read.delim(i)
new_table$Satellite<-append(new_table$Satellite,as.numeric(table[table$Annotation=="Satellite",]$Log2.Ratio..obs.exp.))
new_table$LINE<-append(new_table$LINE,as.numeric(table[table$Annotation=="LINE",]$Log2.Ratio..obs.exp.))
new_table$SINE<-append(new_table$SINE,as.numeric(table[table$Annotation=="SINE",]$Log2.Ratio..obs.exp.))
#new_table$rRNA<-append(new_table$rRNA,as.numeric(table[table$Annotation=="rRNA",]$Log2.Ratio..obs.exp.))
new_table$tRNA<-append(new_table$tRNA,as.numeric(table[table$Annotation=="tRNA",]$Log2.Ratio..obs.exp.))
new_table$LTR<-append(new_table$LTR,as.numeric(table[table$Annotation=="LTR",]$Log2.Ratio..obs.exp.))
new_table$Low_complexity<-append(new_table$Low_complexity,as.numeric(table[table$Annotation=="Low_complexity",]$Log2.Ratio..obs.exp.))
new_table$Simple_repeat<-append(new_table$Simple_repeat,as.numeric(table[table$Annotation=="Simple_repeat",]$Log2.Ratio..obs.exp.))
}
new_df<-as.data.frame(new_table)
row.names(new_df)<-names
new_df
names
# use Homer
#annotatePeaks.pl WT_aza_minus.bed hg19 > WT_aza_minus_homer.txt -genomeOntology ./GO_WT_aza_minus
#for up/down-regulatd peaks
homer_path <- list.files("../homer", pattern="*.bedannStats.txt", full.names=TRUE)
homer_path<-sort(homer_path,decreasing = T)
names<-sort(c(paste0(names(peaks_Up_in_state_1),"_up"),paste0(names(peaks_Down_in_state_1),"_down")),decreasing = T)
new_table<-c()
for (i in homer_path){
table<-read.delim(i)
new_table$Satellite<-append(new_table$Satellite,as.numeric(table[table$Annotation=="Satellite",]$Log2.Ratio..obs.exp.))
new_table$LINE<-append(new_table$LINE,as.numeric(table[table$Annotation=="LINE",]$Log2.Ratio..obs.exp.))
new_table$SINE<-append(new_table$SINE,as.numeric(table[table$Annotation=="SINE",]$Log2.Ratio..obs.exp.))
#new_table$rRNA<-append(new_table$rRNA,as.numeric(table[table$Annotation=="rRNA",]$Log2.Ratio..obs.exp.))
new_table$tRNA<-append(new_table$tRNA,as.numeric(table[table$Annotation=="tRNA",]$Log2.Ratio..obs.exp.))
new_table$LTR<-append(new_table$LTR,as.numeric(table[table$Annotation=="LTR",]$Log2.Ratio..obs.exp.))
new_table$Low_complexity<-append(new_table$Low_complexity,as.numeric(table[table$Annotation=="Low_complexity",]$Log2.Ratio..obs.exp.))
new_table$Simple_repeat<-append(new_table$Simple_repeat,as.numeric(table[table$Annotation=="Simple_repeat",]$Log2.Ratio..obs.exp.))
}
new_df<-as.data.frame(new_table)
row.names(new_df)<-names
names
lengths(names)
length(names)
new_table
new_df
# use Homer
#annotatePeaks.pl WT_aza_minus.bed hg19 > WT_aza_minus_homer.txt -genomeOntology ./GO_WT_aza_minus
#for up/down-regulatd peaks
homer_path <- list.files("../homer", pattern="*n.bedannStats.txt", full.names=TRUE)
homer_path<-sort(homer_path,decreasing = T)
homer
homer_path
# use Homer
#annotatePeaks.pl WT_aza_minus.bed hg19 > WT_aza_minus_homer.txt -genomeOntology ./GO_WT_aza_minus
#for up/down-regulatd peaks
homer_path <- list.files("../homer/differential/", pattern="*.bedannStats.txt", full.names=TRUE)
homer_path<-sort(homer_path,decreasing = T)
names<-sort(c(paste0(names(peaks_Up_in_state_1),"_up"),paste0(names(peaks_Down_in_state_1),"_down")),decreasing = T)
new_table<-c()
for (i in homer_path){
table<-read.delim(i)
new_table$Satellite<-append(new_table$Satellite,as.numeric(table[table$Annotation=="Satellite",]$Log2.Ratio..obs.exp.))
new_table$LINE<-append(new_table$LINE,as.numeric(table[table$Annotation=="LINE",]$Log2.Ratio..obs.exp.))
new_table$SINE<-append(new_table$SINE,as.numeric(table[table$Annotation=="SINE",]$Log2.Ratio..obs.exp.))
#new_table$rRNA<-append(new_table$rRNA,as.numeric(table[table$Annotation=="rRNA",]$Log2.Ratio..obs.exp.))
new_table$tRNA<-append(new_table$tRNA,as.numeric(table[table$Annotation=="tRNA",]$Log2.Ratio..obs.exp.))
new_table$LTR<-append(new_table$LTR,as.numeric(table[table$Annotation=="LTR",]$Log2.Ratio..obs.exp.))
new_table$Low_complexity<-append(new_table$Low_complexity,as.numeric(table[table$Annotation=="Low_complexity",]$Log2.Ratio..obs.exp.))
new_table$Simple_repeat<-append(new_table$Simple_repeat,as.numeric(table[table$Annotation=="Simple_repeat",]$Log2.Ratio..obs.exp.))
}
new_df<-as.data.frame(new_table)
row.names(new_df)<-names
names
new_df
#for peaks
peaks_Up_in_state_1<-peaks_Up_in_state_1[lapply(peaks_Up_in_state_1,length)>0]
peaks_Down_in_state_1<-peaks_Down_in_state_1[lapply(peaks_Down_in_state_1,length)>0]
names<-sort(c(paste0(names(peaks_Up_in_state_1),"_up"),paste0(names(peaks_Down_in_state_1),"_down")),decreasing = T)
new_df<-as.data.frame(new_table)
row.names(new_df)<-names
par(mfrow=c(4,2))
for (i in 1:length(new_df)){
print(i)
barplot(height = new_df[,i],main = colnames(new_df)[i], names = names, col = c("green", "red"),las = 2,ylim = c(-3,3))
}
#for sample peaks of all
homer_path <- list.files("../homer/all/", pattern="*all.bedannStats.txt", full.names=TRUE)
homer_path<-sort(homer_path,decreasing = T)
names<-sort(names(files),decreasing = T)
new_table<-c()
for (i in homer_path){
table<-read.delim(i)
new_table$Satellite<-append(new_table$Satellite,as.numeric(table[table$Annotation=="Satellite",]$Log2.Ratio..obs.exp.))
new_table$LINE<-append(new_table$LINE,as.numeric(table[table$Annotation=="LINE",]$Log2.Ratio..obs.exp.))
new_table$SINE<-append(new_table$SINE,as.numeric(table[table$Annotation=="SINE",]$Log2.Ratio..obs.exp.))
#new_table$rRNA<-append(new_table$rRNA,as.numeric(table[table$Annotation=="rRNA",]$Log2.Ratio..obs.exp.))
new_table$tRNA<-append(new_table$tRNA,as.numeric(table[table$Annotation=="tRNA",]$Log2.Ratio..obs.exp.))
new_table$LTR<-append(new_table$LTR,as.numeric(table[table$Annotation=="LTR",]$Log2.Ratio..obs.exp.))
new_table$Low_complexity<-append(new_table$Low_complexity,as.numeric(table[table$Annotation=="Low_complexity",]$Log2.Ratio..obs.exp.))
new_table$Simple_repeat<-append(new_table$Simple_repeat,as.numeric(table[table$Annotation=="Simple_repeat",]$Log2.Ratio..obs.exp.))
}
new_df<-as.data.frame(new_table)
row.names(new_df)<-names
par(mfrow=c(4,2))
for (i in 1:length(new_df)){
print(i)
barplot(height = new_df[,i],main = colnames(new_df)[i], names = names, col = c("green", "red"),las = 2,ylim = c(-3,3))
}
library(ChIPseeker)
library(TxDb.Hsapiens.UCSC.hg19.knownGene)
library(ggplot2)
library(ggupset)
library(ggimage)
library(ReactomePA)
library(clusterProfiler)
library(DESeq2)
library(limma)
library(Rsamtools)
library(edgeR)
library(GenomicAlignments)
library(rtracklayer)
library(GenomicRanges)
library(AnnotationHub)
library(enrichplot)
library(chromPlot)
library(VennDiagram)
library(reshape2)
library(pheatmap)
library(Gviz)
library(rtracklayer)
library(trackViewer)
library(org.Hs.eg.db)
load("Rloop.RData")
txdb <- TxDb.Hsapiens.UCSC.hg19.knownGene
setwd("/Volumes/Transcend/p53/DRIPc_AZA")
library(ChIPseeker)
library(TxDb.Hsapiens.UCSC.hg19.knownGene)
library(ggplot2)
library(ggupset)
library(ggimage)
library(ReactomePA)
library(clusterProfiler)
library(DESeq2)
library(limma)
library(Rsamtools)
library(edgeR)
library(GenomicAlignments)
library(rtracklayer)
library(GenomicRanges)
library(AnnotationHub)
library(enrichplot)
library(chromPlot)
library(VennDiagram)
library(reshape2)
library(pheatmap)
library(Gviz)
library(rtracklayer)
library(trackViewer)
library(org.Hs.eg.db)
load("Rloop.RData")
txdb <- TxDb.Hsapiens.UCSC.hg19.knownGene
#Trackviewer
bigWigs_plus <- list.files("data/trimmed", pattern="*pos.bigWig$", full.names=TRUE)
bigWigs_plus
bigWigs_plus <- append(bigWigs_plus,list.files("../DRIPc_AZA/data/trimmed", pattern="*pos.bigWig$", full.names=TRUE))
#Trackviewer
bigWigs_plus <- list.files("data/trimmed", pattern="*pos.bigWig$", full.names=TRUE)
bigWigs_plus <- append(bigWigs_plus,list.files("../DRIPc_DAC/data/trimmed", pattern="*pos.bigWig$", full.names=TRUE))
bigWigs_minus <- list.files("data/trimmed", pattern="*neg.bigWig$", full.names=TRUE)
bigWigs_minus <- append(bigWigs_minus,list.files("../DRIPc_DAC/data/trimmed", pattern="*neg.bigWig$", full.names=TRUE))
WT_untr<-importScore(bigWigs_plus[1],bigWigs_minus[1],format="BigWig")
strand(WT_untr$dat) <- "+"
strand(WT_untr$dat2) <- "-"
WT_aza<-importScore(bigWigs_plus[6],bigWigs_minus[6],format="BigWig")
strand(WT_aza$dat) <- "+"
strand(WT_aza$dat2) <- "-"
for (i in 1:20){
gr<-peaks_Down_in_state_1$`WT_untr,WT_aza`[i]
ids <- getGeneIDsFromTxDb(gr, TxDb.Hsapiens.UCSC.hg19.knownGene)
if (length(ids)!=0){
symbols <- mget(ids, org.Hs.egSYMBOL)
genes <- geneTrack(ids, TxDb.Hsapiens.UCSC.hg19.knownGene, symbols, asList=FALSE)
optSty <- optimizeStyle(trackList(WT_aza,WT_untr, genes), theme="safe")
}
if (length(ids)==0){
optSty <- optimizeStyle(trackList(WT_aza,WT_untr), theme="safe")
}
trackList <- optSty$tracks
if (as.vector(strand(gr))=="+"){max<-max(subsetByOverlaps(trackList[[2]]$dat,gr)$score,subsetByOverlaps(trackList[[1]]$dat,gr)$score)}
if (as.vector(strand(gr))=="-"){max<-max(subsetByOverlaps(trackList[[2]]$dat2,gr)$score,subsetByOverlaps(trackList[[1]]$dat2,gr)$score)}
setTrackStyleParam(trackList[[1]], "ylim", c(-max, max))
setTrackStyleParam(trackList[[2]], "ylim", c(-max, max))
setTrackStyleParam(trackList[[1]], "color", c("lightblue", "darkblue"))
setTrackStyleParam(trackList[[2]], "color", c("lightblue", "darkblue"))
viewerStyle <- optSty$style
setTrackViewerStyleParam(viewerStyle, "xaxis", FALSE)
pdf(file = paste0("~/Desktop/igv_images/",i,"peaks_aza_plot_Down.pdf"), width = 8, height = 4)
vp <- viewTracks(trackList, gr=gr, viewerStyle=viewerStyle)
addArrowMark(list(x=start(gr),y=1),label=paste0(as.vector(seqnames(gr)),":",start(gr),"-",end(gr)),col="black",vp=vp)
if (length(ids)!=0){addArrowMark(list(x=start(gr),y=3),label=mapIds(org.Hs.eg.db, ids,"SYMBOL", "ENTREZID" ),col="black",vp=vp)}
dev.off()
}
shiny::runApp('OneDrive - University of Cambridge/Argonautes/interaction_network/shiny')
runApp('OneDrive - University of Cambridge/Argonautes/interaction_network/shiny')
runApp('OneDrive - University of Cambridge/Argonautes/interaction_network/shiny')
runApp('OneDrive - University of Cambridge/Argonautes/interaction_network/shiny')
?readLines
?writeLines
runApp('OneDrive - University of Cambridge/Argonautes/interaction_network/shiny')
?file
runApp('OneDrive - University of Cambridge/Argonautes/interaction_network/shiny')
runApp('OneDrive - University of Cambridge/Argonautes/interaction_network/shiny')
runApp('OneDrive - University of Cambridge/Argonautes/interaction_network/shiny')
runApp('OneDrive - University of Cambridge/Argonautes/interaction_network/shiny')
runApp('OneDrive - University of Cambridge/Argonautes/interaction_network/shiny')
runApp('OneDrive - University of Cambridge/Argonautes/interaction_network/shiny')
shiny::runApp('OneDrive - University of Cambridge/Argonautes/interaction_network/shiny')
?addRepresentation()
runApp('OneDrive - University of Cambridge/Argonautes/interaction_network/shiny')
runApp('OneDrive - University of Cambridge/Argonautes/interaction_network/shiny')
shiny::runApp('OneDrive - University of Cambridge/Argonautes/interaction_network/shiny')
runApp('OneDrive - University of Cambridge/Argonautes/interaction_network/shiny')
runApp('OneDrive - University of Cambridge/Argonautes/interaction_network/shiny')
runApp('OneDrive - University of Cambridge/Argonautes/interaction_network/shiny')
runApp('OneDrive - University of Cambridge/Argonautes/interaction_network/shiny')
runApp('OneDrive - University of Cambridge/Argonautes/interaction_network/shiny')
runApp('OneDrive - University of Cambridge/Argonautes/interaction_network/shiny')
runApp('OneDrive - University of Cambridge/Argonautes/interaction_network/shiny')
runApp('shiny')
runApp('OneDrive - University of Cambridge/Argonautes/interaction_network/shiny')
runApp('OneDrive - University of Cambridge/Argonautes/interaction_network/shiny')
runApp('shiny')
runApp('OneDrive - University of Cambridge/Argonautes/interaction_network/shiny')
runApp('OneDrive - University of Cambridge/Argonautes/interaction_network/shiny')
runApp('OneDrive - University of Cambridge/Argonautes/interaction_network/shiny')
runApp('OneDrive - University of Cambridge/Argonautes/interaction_network/shiny')
runApp('shiny')
runApp('OneDrive - University of Cambridge/Argonautes/interaction_network/shiny')
exp(1)
exp(0.2)
exp(0.8)
log(0.4)
ln(0.4)
exp10(1)
log(exp(10))
log(exp(1))
exp10<-function(x){
#This function accepts a value, x, as input and returns the value of 10 raised
#to the power of x
10^x
}
exp10(1)
exp10(0.9)
exp10(0.1)
exp100(0.1)
shiny::runApp('OneDrive - University of Cambridge/Argonautes/interaction_network/shiny')
shiny::runApp('Library/CloudStorage/OneDrive-UniversityofCambridge/Argonautes/interaction_network/shiny')
runApp('Library/CloudStorage/OneDrive-UniversityofCambridge/Argonautes/interaction_network/shiny')
runApp('Library/CloudStorage/OneDrive-UniversityofCambridge/Argonautes/interaction_network/shiny')
shiny::runApp('Library/CloudStorage/OneDrive-UniversityofCambridge/Argonautes/interaction_network/shiny')
runApp('Library/CloudStorage/OneDrive-UniversityofCambridge/Argonautes/interaction_network/shiny')
runApp('Library/CloudStorage/OneDrive-UniversityofCambridge/Argonautes/interaction_network/shiny')
runApp('Library/CloudStorage/OneDrive-UniversityofCambridge/Argonautes/interaction_network/shiny')
runApp('shiny')
runApp('Library/CloudStorage/OneDrive-UniversityofCambridge/Argonautes/interaction_network/shiny')
runApp('Library/CloudStorage/OneDrive-UniversityofCambridge/Argonautes/interaction_network/shiny')
runApp('shiny')
runApp('Library/CloudStorage/OneDrive-UniversityofCambridge/Argonautes/interaction_network/shiny')
runApp('Library/CloudStorage/OneDrive-UniversityofCambridge/Argonautes/interaction_network/shiny')
transl
runApp('Library/CloudStorage/OneDrive-UniversityofCambridge/Argonautes/interaction_network/shiny')
runApp('Library/CloudStorage/OneDrive-UniversityofCambridge/Argonautes/interaction_network/shiny')
runApp('Library/CloudStorage/OneDrive-UniversityofCambridge/Argonautes/interaction_network/shiny')
library(ChIPseeker)
library(TxDb.Hsapiens.UCSC.hg19.knownGene)
library(ggplot2)
library(ggupset)
library(ggimage)
library(ReactomePA)
library(clusterProfiler)
library(DESeq2)
library(limma)
library(Rsamtools)
library(edgeR)
library(GenomicAlignments)
library(rtracklayer)
library(GenomicRanges)
library(AnnotationHub)
library(enrichplot)
library(chromPlot)
library(VennDiagram)
library(reshape2)
library(pheatmap)
library(Gviz)
library(rtracklayer)
library(trackViewer)
library(org.Hs.eg.db)
setwd("/Volumes/Transcend/p53/DRIPc_AZA")
load("Rloop_newDAC.RData")
txdb <- TxDb.Hsapiens.UCSC.hg19.knownGene
lapply(seq_along(pathway_up_peaks),function(i) dotplot(pathway_up_peaks[[i]],showCategory = 10,title=paste("Up-regulated peaks of",(names(pathway_up_peaks)[[i]]))))
lapply(seq_along(pathway_up_peaks),function(i) dotplot(pathway_up_peaks[[i]],showCategory = 20,title=paste("Up-regulated peaks of",(names(pathway_up_peaks)[[i]]))))
pathway_up_peaks[[i]]
pathway_up_peaks[[4]]
#Compare cluster
dotplot(compareCluster(geneCluster = genes_up_peaks, fun = "enrichPathway"), showCategory = 10, title = "Pathway UP Enrichment Analysis of peaks")
lapply(seq_along(pathway_up_peaks),function(i) dotplot(pathway_up_peaks[[i]],showCategory = 10,title=paste("Up-regulated peaks of",(names(pathway_up_peaks)[[i]]))))
al
all
names(anno_up)<-paste0(names(anno_up),"_up")
names(anno_down)<-paste0(names(anno_down),"_down")
all<-c(anno_up,anno_down)
all<-all[ order(names(all),decreasing=TRUE)]
plotAnnoBar(all,title ="Feature distribution of peaks")
anno_up$`WT_untr,WT_aza_up`
genes_up$`WT_untr,WT_aza`
p53_df
p53_positions
p53<-lapply(p53_positions, annotatePeak, TxDb=txdb,tssRegion=c(-2000, 2000), verbose=FALSE, sameStrand = T)
p53<-lapply(p53_positions, annotatePeak, TxDb=txdb,tssRegion=c(-2000, 2000), verbose=FALSE, sameStrand = T)
p53_positions
p53<-apply(p53_positions, annotatePeak, TxDb=txdb,tssRegion=c(-2000, 2000), verbose=FALSE, sameStrand = T)
annotatePeak(p53_positions,TxDb=txdb,tssRegion=c(-2000, 2000), verbose=FALSE, sameStrand = T)
lapply(p53_positions, annotatePeak, TxDb=txdb,tssRegion=c(-2000, 2000), verbose=FALSE, sameStrand = T)
genes_up_peaks<- lapply(anno_up, function(i) subset(as.data.frame(i), annotation== "Promoter (<=1kb)" | annotation== "Promoter (1-2kb)")$geneId)
genes_up_peaks
lapply(seq_along(pathway_up_peaks),function(i) dotplot(pathway_up_peaks[[i]],showCategory = 10,title=paste("Up-regulated peaks of",(names(pathway_up_peaks)[[i]]))))
lapply(seq_along(pathway_up_peaks),function(i) dotplot(pathway_up_peaks[[i]],showCategory = 10,title=paste("Up-regulated peaks of",(names(pathway_up_peaks)[[i]]))))
lapply(seq_along(pathway_up_peaks),function(i) dotplot(pathway_up_peaks[[i]],showCategory = 20,title=paste("Up-regulated peaks of",(names(pathway_up_peaks)[[i]]))))
pathway_up_peaks
pathway_up_peaks <- lapply(genes_up_peaks,enrichPathway,organism="human")
lapply(seq_along(pathway_up_peaks),function(i) dotplot(pathway_up_peaks[[i]],showCategory = 20,title=paste("Up-regulated peaks of",(names(pathway_up_peaks)[[i]]))))
lapply(seq_along(pathway_up_peaks),function(i) dotplot(pathway_up_peaks[[i]],showCategory = 30,title=paste("Up-regulated peaks of",(names(pathway_up_peaks)[[i]]))))
genes_up_peaks<- lapply(anno_up, function(i) subset(as.data.frame(i), annotation!= "Distal Intergenic")$geneId)
pathway_up_peaks <- lapply(genes_up_peaks,enrichPathway,organism="human")
lapply(seq_along(pathway_up_peaks),function(i) dotplot(pathway_up_peaks[[i]],showCategory = 10,title=paste("Up-regulated peaks of",(names(pathway_up_peaks)[[i]]))))
lapply(seq_along(pathway_up_peaks),function(i) dotplot(pathway_up_peaks[[i]],showCategory = 20,title=paste("Up-regulated peaks of",(names(pathway_up_peaks)[[i]]))))
lapply(seq_along(pathway_up_peaks),function(i) dotplot(pathway_up_peaks[[i]],showCategory = 10,title=paste("Up-regulated peaks of",(names(pathway_up_peaks)[[i]]))))
shiny::runApp('Library/CloudStorage/OneDrive-UniversityofCambridge/Argonautes/interaction_network/shiny')
runApp('shiny')
runApp('Library/CloudStorage/OneDrive-UniversityofCambridge/Argonautes/interaction_network/shiny')
runApp('Library/CloudStorage/OneDrive-UniversityofCambridge/Argonautes/interaction_network/shiny')
runApp('Library/CloudStorage/OneDrive-UniversityofCambridge/Argonautes/interaction_network/shiny')
#Source functions
source("function/translator.R")
#Load packages
packages<-c("shiny", "tidyverse","tidygraph", "data.table", "circlize", "network", "igraph", "networkD3", "chorddiag", "NGLVieweR", "shinyalert", "rotl", "ggtree", "ggnewscale","ggplot2","ggraph", "htmlwidgets", "ape","reshape2","bio3d")
suppressWarnings(suppressMessages(lapply(packages, require, character.only = TRUE)))
#Source functions
source("function/translator.R")
setwd("~/Library/CloudStorage/OneDrive-UniversityofCambridge/Argonautes/manuscript/nat_com_submission/code")
source("function/pdb_function_af2.R")
#Source functions
source("function/translator.R")
translate2_top("4OLB", "C.L23.9", "N.H7.8")
translate2_top("4OLB", c("C.L23.9", "N.H7.8"))
translate2_top("4OLB", c("C.L17.2", "C.L17.1","C.H8.14"))
translate2_top("4OLB", c("N.L10.2"))
translate2_top("4OLB", c("N.L10.2", "N.S18.2"))
translate2_top("4OLB", c("N.L10.2", "N.S18.2", "N.S15.2"))
